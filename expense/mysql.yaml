- name: mysql configuration
  hosts: mysql
  become: yes
  vars:
    mysql_password: ExpenseApp@1
    mysql_host: "mysql.harikagade.store"
  tasks:

  - name: install python lib PyMySQL
    ansible.builtin.pip:
      name: PyMySQL

  - name: install cryptography package
    ansible.builtin.pip:
      name: cryptography

  - name: install MySQL Server
    ansible.builtin.package:
      name: mysql-server
      state: present

  - name: start mysql server
    ansible.builtin.service:
      name: mysqld
      state: started
      enabled: yes

  - name: Check if MySQL root user can connect
    community.mysql.mysql_info:
      login_user: root
      login_password: "{{ mysql_password }}"
      login_host: "{{ mysql_host }}"
    ignore_errors: true
    register: mysql_info

  - name: print the mysql_info
    ansible.builtin.debug:
      msg: "{{ mysql_info }}"

  - name: Ensure MySQL root user uses mysql_native_password
    community.mysql.mysql_user:
      name: root
      host: "{{ mysql_host }}"
      password: "{{ mysql_password }}"
      priv: "*.*:ALL,GRANT"
      login_user: root
      login_password: "{{ mysql_password }}"
      plugin: mysql_native_password
      state: present
    when: mysql_info.failed == true

  - name: Set MySQL root password
    community.mysql.mysql_user:
      name: root
      host: "{{ mysql_host }}"
      password: "{{ mysql_password }}"
      login_user: root
      login_password: "{{ mysql_password }}"
      state: present
    when: mysql_info.failed == true

  - name: Run mysql_secure_installation commands
    ansible.builtin.command: >
      mysql -uroot -p{{ mysql_password }} -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY '{{ mysql_password }}';"
    when: mysql_info.failed == true
