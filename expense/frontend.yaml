#install nginx
#donwload the project
# unzip and store the files in required location
# execute
- name: backend server
  hosts: backend
  become: yes
  vars:
    mysql_password: ExpenseApp@1
    mysql_host: mysql.harikagade.store

  tasks:
  - name: Disable default nodejs
    ansible.builtin.dnf:
      name: nodejs
      state: absent
      module_hotfixes: yes

  - name: Enable nodejs version 20
    ansible.builtin.dnf:
      name: nodejs:20
      state: present

  - name: Install required packages (Node.js and MySQL)
    ansible.builtin.package:
      name: 
        - nodejs
        - mysql
      state: present

  - name: Add user 'expense'
    ansible.builtin.user:
      name: expense

  - name: Create application directory /app
    ansible.builtin.file:
      path: /app
      state: directory
      owner: expense
      group: expense

  - name: Download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: Extract the backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
      owner: expense
      group: expense

  - name: Install backend dependencies
    ansible.builtin.npm:
      path: /app
      production: true

  - name: Copy backend service file to systemd
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: Install PyMySQL and cryptography for Python 3.9
    ansible.builtin.pip:
      name:
        - PyMySQL
        - cryptography
      executable: pip3.9

  - name: Import MySQL database schema
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_password }}"
      login_host: "{{ mysql_host }}"
      target: /app/schema/backend.sql
      state: import

  - name: Reload systemd and restart backend service
    ansible.builtin.systemd:
      daemon_reload: true
      name: backend
      state: restarted
      enabled: yes
